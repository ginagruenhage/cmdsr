#Weird effect using stepfunctions

Let's build a distance matrix based constant functions with even spacing:

```{r}
DL1 <- replicate(5,a.m(dist(c(0,1,2,3,4))))
DL1 <- alply(DL1,3,function(d) d)
```
As expected, cmds can perfectly embed these distances in k=1 dimensions:
```{r}
plot.cmds(cmds(DL1,k=1,l=0))
```

Let's glue a second set of constant functions to the first set, but with double the spacing.

```{r}
DL2 <- replicate(5,a.m(dist(c(0,2,4,6,8))))
DL2 <- alply(DL2,3,function(d) d)
plot.cmds(cmds(DL2,k=1,l=0))
plot.cmds(cmds(c(DL1,DL2),k=1,l=0))
```
That also works fine.

Now, let's take functions with random y intercept:
```{r}
vec <- rnorm(5,sd=2)
DL3 <- replicate(5,a.m(dist(vec)))
DL3 <- alply(DL3,3,function(d) d)
plot.cmds(cmds(DL3,k=1,l=0))
```
That works. However, if we combine this distance list with one of the previous one, the algorithm fails:
```{r}
plot.cmds(cmds(c(DL1,DL3),k=1,l=0),shepard=TRUE)
```

This is weird, because I am using l=0 in all cases.